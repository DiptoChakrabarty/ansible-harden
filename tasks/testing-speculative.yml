---
# https://access.redhat.com/security/vulnerabilities/speculativeexecution
# https://gist.github.com/ErikAugust/724d4a969fb2c6ae1bbd7b2a9e3d4bb6
# https://twitter.com/pwnallthethings/status/948693961358667777
# https://github.com/Eugnis/spectre-attack/blob/master/Source.c

- name: ensure dev tools are present
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ build_dev_tools }}"

- name: download speculative execution sample code
  get_url:
    url: https://gist.githubusercontent.com/jedisct1/3bbb6e50b768968c30629bf734ea49c6/raw/6ede3c9a3356a4a55a27febaf38157897c4fed09/spectre.c
    dest: /tmp/spectre.c
    owner: nobody

- name: compile sample code
  shell: gcc -std=c99 -O0 spectre.c -o spectre
  args:
    chdir: /tmp

- name: run sample code
  shell: ./spectre
  args:
    chdir: /tmp
  become: yes
  become_user: nobody
  register: spectre
  ignore_errors: true

- debug: var=spectre

- name: retrieve Am-I-affected-by-Meltdown
  git:
    repo: https://github.com/raphaelsc/Am-I-affected-by-Meltdown.git
    dest: /tmp/Am-I-affected-by-Meltdown
    update: no
  become: yes
  become_user: nobody

- name: build Am-I-affected-by-Meltdown
  shell: make
  args:
    chdir: /tmp/Am-I-affected-by-Meltdown
    creates: /tmp/Am-I-affected-by-Meltdown/meltdown-checker

# root required as kptr_restrict set to 1
- name: test Am-I-affected-by-Meltdown
  shell: ./meltdown-checker
  args:
    chdir: /tmp/Am-I-affected-by-Meltdown
  register: meltdown
  ignore_errors: true

- debug: var=meltdown

- name: retrieve another meltdown poc
  git:
    repo: https://github.com/paboldin/meltdown-exploit.git
    dest: /tmp/meltdown-exploit
    update: no
  become: yes
  become_user: nobody

- name: build meltdown-exploit
  shell: make
  args:
    chdir: /tmp/meltdown-exploit
    creates: /tmp/meltdown-exploit/meltdown

# root required as kptr_restrict set to 1
- name: test meltdown-exploit
  shell: ./run.sh
  args:
    chdir: /tmp/meltdown-exploit
  register: meltdown2
  ignore_errors: true

- debug: var=meltdown2

- name: retrieve IAIK poc
  git:
    repo: https://github.com/IAIK/meltdown.git
    dest: /tmp/meltdown-iaik
    update: no
  become: yes
  become_user: nobody

- name: ensure IAIK poc dependencies are present
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - glibc-static
    - util-linux
  ignore_errors: true

- name: build IAIK poc
  shell: "{{ item }}"
  with_items:
    - make
  args:
    chdir: /tmp/meltdown-iaik

- name: test IAIK poc
  shell: "{{ item }}"
  with_items:
    - taskset 0x1 ./test
  args:
    chdir: /tmp/meltdown-iaik
  become: yes
  become_user: nobody
  register: iaik1
  ignore_errors: true

- debug: var=iaik1

- name: test IAIK poc - root
  shell: "{{ item }}"
  args:
    chdir: /tmp/meltdown-iaik
  with_items:
    - taskset 0x1 ./kaslr
    - taskset 0x1 ./reliability 0xffff880000000000
    - nohup ./secret
    - taskset 0x1 ./physical_reader 0x390fff400 0xffff880000000000
  become: yes
  become_user: root
  register: iaik2
  ignore_errors: true

- debug: var=iaik2

- name: retrieve another check
  git:
    repo: https://github.com/speed47/spectre-meltdown-checker.git
    dest: /tmp/spectre-meltdown-checker
    update: no
  become: yes
  become_user: nobody

# root required
- name: run spectre-meltdown-checker
  shell: ./spectre-meltdown-checker.sh
  args:
    chdir: /tmp/spectre-meltdown-checker
  register: checker
  ignore_errors: true

- debug: var=checker.stdout_lines

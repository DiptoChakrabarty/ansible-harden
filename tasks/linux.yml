---

- name: set better login.defs
  lineinfile: "dest=/etc/login.defs regexp={{ item.r }} line={{ item.l }}"
  with_items:
    - { r: '^PASS_MAX_DAYS', l: "PASS_MAX_DAYS   {{ harden_logindefs_pass_maxdays }}" }
    - { r: '^PASS_WARN_AGE', l: "PASS_WARN_AGE    {{ harden_logindefs_pass_warnage }}" }
    - { r: '^UMASK', l: "UMASK     {{ harden_umask }}" }
  when: ansible_os_family != "Alpine"

## https://unixserveradmin.wordpress.com/2012/12/08/how-to-stop-usb-mass-storage-device-in-rhelcentos/
- block:
    - name: disable usb storage drivers - modprobe
      lineinfile: dest=/etc/modprobe.d/no-usb line='install usb-storage /bin/true' create=yes
    - stat: path=/etc/default/grub
      register: defgrub
    - name: disable usb storage drivers - grub
      replace: dest=/etc/default/grub regexp='GRUB_CMDLINE_LINUX="(.*)nousb(.*)"' replace='\1nousb\2' backup=yes
    ## http://security.stackexchange.com/questions/49097/protecting-against-firewire-dma-vulnerabilities-in-linux
      when: ansible_os_family != "Alpine" and (defgrub is defined and defgrub.stat.exists)
  when: harden_disable_usb is defined and harden_disable_usb

- name: disable firewire DMA drivers - modprobe
  lineinfile: dest=/etc/modprobe.d/no-firewire line='blacklist firewire-sbp2' create=yes

- block:
    - stat: path=/etc/default/apport
      register: defapport
      when: ansible_distribution == 'Ubuntu'
    - name: Ubuntu | ensure Apport crash report is disabled
      replace: dest=/etc/default/apport regexp='^enabled=.*$' replace='enabled=0'
      when: ansible_distribution == 'Ubuntu' and defapport.stat.exists
    - name: set sensible core pattern
      sysctl: name="kernel.core_pattern" value="/tmp/cores/core.%e.%p.%h.%t" sysctl_set=yes state=present reload=yes
  when: ansible_system == 'Linux' and harden_linux_disable_bugreport is defined and harden_linux_disable_bugreport and not (ansible_virtualization_type is defined and (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker"))

#journalctl --disk-usage
#journalctl --verify
#journalctl --vacuum-size=800M
- block:
    - name: configure linux journal
      ini_file: dest=/etc/systemd/journald.conf section={{ item.s }} option={{ item.o }} value={{ item.v }} backup=yes
      with_items:
        - { s: 'Journal', o: 'SystemMaxUse', v: "{{ harden_journald_systemmaxuse }}" }
#        - { s: 'Journal', o: 'ForwardToSyslog', v: 'yes' }
      notify:
        - restart journald
  when: ansible_service_mgr == "systemd"

## FIXME! firewall rules

- include: iptables.yml
  when: ansible_os_family == 'Debian' or ansible_os_family == "RedHat"

- include: usb.yml
  when: harden_usb_restrict_udev

- include: aide-hids.yml
  when: ansible_os_family == 'Debian' or ansible_os_family == "RedHat"

- include: osquery.yml
  when: ansible_os_family == 'Debian' or ansible_os_family == "RedHat"

- include: ubuntu-livepatch.yml
  when: harden_ubuntu_livepatch is defined and harden_ubuntu_livepatch


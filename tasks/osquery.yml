---

- name: check if osquery is present
  stat: path=/etc/osquery
  register: hasOsquery
- block:
    - name: ensure directories exist
      file:
        dest: "{{ item.d }}"
        state: directory
        mode: "{{ item.m }}"
      with_items:
        - { d: '/var/log/osquery', m: '0755' }
    - name: push extra osquery packs file
      template:
        src: "{{ item }}"
        dest: "/usr/share/osquery/packs/{{ item | basename | regex_replace('.j2$', '') }}"
      with_items: "{{ harden_osquery_upload_packs }}"
      notify:
        - restart osquery
    - debug: var=harden_osquery_packs
    - name: configure osquery
      template:
        src: "{{ harden_osquery_template }}"
        dest: /etc/osquery/osquery.conf
        mode: '0644'
        backup: yes
        validate: 'osqueryi --config_path %s --config_check --verbose'
#        validate: 'egrep -v '^\s*//' %s | tee /tmp/a | python -mjson.tool'
      notify:
        - restart osquery
    - name: configure osquery flags
      template:
        src: "osquery.flags.j2"
        dest: /etc/osquery/osquery.flags
        mode: '0644'
        backup: yes
      notify:
        - restart osquery
    - name: re-validate whole osquery config
      command: 'osqueryi --config_path /etc/osquery/osquery.conf --config_check --verbose'
      changed_when: false
    - name: add logrotate configuration for osquery log
      template: src=logrotate-osquery.j2 dest=/etc/logrotate.d/osquery mode=0644 validate='logrotate -dv %s'
    - name: ensure service is enabled and started
      service: name=osqueryd state=started enabled=yes
    - set_fact:
        monit_osqueryd: true
  when: hasOsquery.stat.exists

- block:
    - name: review inotify sysctl settings for osquery
      sysctl: name="{{ item.n }}" value="{{ item.v }}" sysctl_set=yes state=present reload=yes
      with_items:
        - { n: 'fs.inotify.max_user_watches', v: '524288' }
        - { n: 'fs.inotify.max_user_instances', v: '256' }
        - { n: 'fs.inotify.max_queued_events', v: '32768' }
  when: >
    harden_osquery_fim and
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
        )

## ensure no auditd at the same time
## https://osquery.readthedocs.io/en/stable/deployment/process-auditing/
- block:
    - name: ensure auditd is not present
      package: name={{ auditd_pkg }} state=absent
  when: harden_osquery_process_auditing

- block:
    - name: setup rsyslog pipe for osquery communication
      template:
        src: osquery-rsyslog.conf.j2
        dest: /etc/rsyslog.d/90-osquery.conf
        mode: '0644'
        backup: yes
      notify:
        - restart rsyslog
  when: harden_osquery_rsyslog

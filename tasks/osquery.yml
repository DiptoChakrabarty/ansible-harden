---

- name: check if osquery is present
  stat: path=/etc/osquery
  register: hasOsquery
- block:
    - name: push extra osquery packs file
      template:
        src: "{{ item }}"
        dest: "/usr/share/osquery/packs/{{ item | basename | regex_replace('.j2$', '') }}"
      with_items: "{{ harden_osquery_upload_packs }}"
      notify:
        - restart osquery
    - debug: var=harden_osquery_packs
    - name: configure osquery
      template:
        src: "{{ harden_osquery_template }}"
        dest: /etc/osquery/osquery.conf
        mode: '0644'
        backup: yes
        validate: 'osqueryi --config_path %s --config_check --verbose'
#        validate: 'egrep -v '^\s*//' %s | python -mjson.tool'
      notify:
        - restart osquery
    - name: add logrotate configuration for iptables.log
      template: src=logrotate-osquery.j2 dest=/etc/logrotate.d/osquery mode=0644 validate='logrotate -dv %s'
    - name: ensure service is enabled and started
      service: name=osqueryd state=started enabled=yes
  when: hasOsquery.stat.exists

## FIXME! warnings like (from packs/incident-response.conf)
#virtual_table.cpp:484] The shell_history table returns data based on the current user by default, consider JOINing against the users table
# but still apply with
# SELECT s.uid,s.time,s.command,s.history_file FROM shell_history s JOIN users USING (uid) limit 10;

- block:
    - name: review inotify sysctl settings for osquery
      sysctl: name="{{ item.n }}" value="{{ item.v }}" sysctl_set=yes state=present reload=yes
      with_items:
        - { n: 'fs.inotify.max_user_watches', v: '524288' }
        - { n: 'fs.inotify.max_user_instances', v: '256' }
        - { n: 'fs.inotify.max_queued_events', v: '32768' }
  when: harden_osquery_fim and not (ansible_virtualization_type is defined and (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker"))

## ensure no auditd at the same time
## https://osquery.readthedocs.io/en/stable/deployment/process-auditing/
- block:
    - name: ensure auditd is not present
      package: name=auditd state=absent
    - name: enable osquery process auditing with flags file
      blockinfile:
        path: /etc/osquery/osquery.flags
        block: |
          --disable_audit=false
          --audit_allow_config=true
          --audit_persist=true
          --audit_allow_sockets
        create: yes
      notify:
        - restart osquery
  when: harden_osquery_process_auditing

- block:
    - name: setup rsyslog pipe for osquery communication
      template:
        src: osquery-rsyslog.conf.j2
        dest: /etc/rsyslog.d/90-osquery.conf
        mode: '0644'
        backup: yes
      notify:
        - restart rsyslog
    - name: enable osquery syslog consumption
      lineinfile:
        path: /etc/osquery/osquery.flags
        line: '--enable_syslog'
        backup: yes
        create: yes
      notify:
        - restart osquery
  when: harden_osquery_rsyslog
